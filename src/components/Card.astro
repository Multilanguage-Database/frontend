---
import type { Product } from "../typings/product.js";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export interface Props {
  product: Product;
}

const { product } = Astro.props;
---

<div class="card bg-white shadow-xl">
  <div class="card-body">
    <h2 class="card-title">{product.title}</h2>
    <div class="collapse-plus rounded-box collapse bg-neutral-100 shadow-md">
      <input type="checkbox" />
      <div class="text-m collapse-title font-medium">
        {t("card.description")}
      </div>
      <div class="collapse-content">
        <p>
          {product.description}
        </p>
      </div>
    </div>

    <div class="card-actions">
      <div>
        <p class="text-primary">{t("card.quantity")}: {product.quantity}</p>
        <p class="text-xl">{t("card.price")}: {product.price}{t("currency")}</p>
      </div>

      <div
        class="cartButton tooltip tooltip-bottom tooltip-primary ml-auto"
        data-tip="Bitte melde dich an."
      >
        <label for="cart" class="btn-disabled btn">{t("card.cart")}</label>
      </div>
      <label for="cart" class="cartActiveButton btn-accent btn ml-auto hidden"
        >{t("card.cart")}</label
      >
    </div>
  </div>
</div>

<script>
  import axios from "axios";

  let activeButtons = document.querySelectorAll(".cartActiveButton");
  import type { OneCustomerResponse } from "../typings/customer.js";

  let account;
  setTimeout(() => {
    account = document.getElementById("account").innerHTML;
    if (account !== "Account") {
      let buttons = document.querySelectorAll(".cartButton");

      [].forEach.call(buttons, function (e) {
        e.classList.add("hidden");
      });

      [].forEach.call(activeButtons, function (e) {
        e.classList.remove("hidden");
      });
    }
  }, 200);

  async function createCart() {
    var cookies = document.cookie.split(";");
    var hasCartCookie = false;

    for (var i = 0; i < cookies.length; i++) {
      var cookie = cookies[i].trim();
      if (cookie.includes("cart")) {
        hasCartCookie = true;
        break;
      }
    }

    if (!hasCartCookie) {
      let customer: OneCustomerResponse;
      if (
        document.cookie
          .split(";")
          .some((item) => item.includes("customerEmail"))
      ) {
        async function getCustomerEmailFromCookie() {
          const cookies = document.cookie.split(";");
          for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.startsWith("customerEmail")) {
              const email = cookie
                .substring("customerEmail=customerEmail: ".length)
                .trim();
              console.log(email);
              return email;
            }
          }
          return null; // Return null if the cookie is not found
        }
        const customerEmail = await getCustomerEmailFromCookie();

        customer = await fetch(
          "http://localhost:8080/customer/email?email=" + customerEmail
        ).then((response) => response.json());

        axios
          .post(
            "http://localhost:8080/cart",
            { email: customer.email },
            {
              headers: { "Content-Type": "application/json" },
            }
          )
          .then(() => {
            document.cookie = "cart=cart";
            return null;
          })
          .catch((error) => {
            console.log(error);
            return error;
          });
      }
      return false;
    }
  }
  [].forEach.call(activeButtons, function (e) {
    e.addEventListener("click", createCart);
  });
</script>
